name: Build and deploy

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '8'
          cache: 'gradle'
      - name: Display Java Version
        run: java -version
      - name: Test
        run: |
          ./gradlew clean build test -i
      - name: Build Application JAR
        run: |
          ./gradlew shadowJar -PvideoArch=macos -x test 
          ./gradlew shadowJar -PvideoArch=linux -x test 
          ./gradlew shadowJar -PvideoArch=windows -x test
      - name: Archive Binary
        uses: actions/upload-artifact@v3
        with:
          name: application-jars
          path: |
            ./build/libs/*-all.jar

# ~~~~~~~~~~~~~ Release section, only triggered for v* tags ~~~~~~~~~~~~~~~~

  github-release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      # ~~~ Add the asset ~~~

      - name: Download the binary from previous step
        id: download
        uses: actions/download-artifact@v3
        with:
          name: application-jars
          path: build/libs

      - name: Read the artifact name (macos)
        id: downloaded_artifact_macos
        run: |
          echo "name=$(ls -1 ./build/libs/*-macos-* | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset (macos)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/libs/${{steps.downloaded_artifact_macos.outputs.name}}
          asset_name: ${{steps.downloaded_artifact_macos.outputs.name}}
          asset_content_type: application/java-archive

      - name: Read the artifact name (linux)
        id: downloaded_artifact_linux
        run: |
          echo "name=$(ls -1 ./build/libs/*-linux-* | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset (linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/libs/${{steps.downloaded_artifact_linux.outputs.name}}
          asset_name: ${{steps.downloaded_artifact_linux.outputs.name}}
          asset_content_type: application/java-archive

      - name: Read the artifact name (windows)
        id: downloaded_artifact_windows
        run: |
          echo "name=$(ls -1 ./build/libs/*-windows-* | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset (windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/libs/${{steps.downloaded_artifact_windows.outputs.name}}
          asset_name: ${{steps.downloaded_artifact_windows.outputs.name}}
          asset_content_type: application/java-archive